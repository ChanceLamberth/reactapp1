{"version":3,"sources":["firebase.js","components/tabs.jsx","components/card.jsx","components/table.jsx","components/form.jsx","pages/homepage.jsx","components/Navbar.jsx","pages/Error.jsx","pages/login.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Tabs","Box","BasicCard","props","value","price","console","log","Card","sx","minWidth","maxWidth","boxShadow","marginRight","marginLeft","marginBottom","CardContent","Typography","fontSize","color","gutterBottom","variant","component","BasicRowEditingGrid","Container","style","paddingTop","Row","height","width","editMode","rows","columns","field","headerName","editable","type","id","stock","dateCreated","randomCreatedDate","lastLogin","randomUpdatedDate","randomTraderName","AppForm","Form","className","Group","as","Col","controlId","Label","Control","placeholder","Select","defaultValue","Check","label","Button","HomePage","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","Collapse","Nav","Link","to","end","NavDropdown","title","Item","Divider","eventKey","Error","LoginPage","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oTA4BAA,IAASC,cApBc,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,sDACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAaJT,IAASU,Y,OAAxB,I,OCQeC,I,wEC5BZC,EAAA,EAQY,SAASC,EAAUC,GAC9B,IAAIC,EAAQD,EAAMC,MACdC,EAAQF,EAAME,MAEpB,OADEC,QAAQC,IAAIH,EAAO,iBAEnB,cAACI,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,IAAKC,SAAU,IAAKC,UAAW,uBAAwBC,YAAa,EAAGC,WAAY,EAAGC,aAAc,GAA1H,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYR,GAAI,CAAES,SAAU,IAAMC,MAAM,iBAAiBC,cAAY,EAArE,SACGhB,IAEH,cAACa,EAAA,EAAD,CAAYI,QAAQ,KAAKC,UAAU,MAAnC,SACGjB,SClBI,SAASkB,IACtB,OACE,qCACA,cAACC,EAAA,EAAD,CAAWC,MAAO,CAACC,WAAW,QAA9B,SACE,eAACC,EAAA,EAAD,WACE,cAACzB,EAAD,CAAWE,MAAM,eAAeC,MAAM,WACtC,cAACH,EAAD,CAAWE,MAAM,iBAAiBC,MAAM,WACxC,cAACH,EAAD,CAAWE,MAAM,aAAaC,MAAM,gBAMtC,cAACmB,EAAA,EAAD,UACI,qBAAKC,MAAO,CAAEG,OAAQ,IAAKC,MAAO,OAAQH,WAAW,QAArD,SACE,cAAC,IAAD,CAAUI,SAAS,MAAMC,KAAMA,EAAMC,QAASA,WAO1D,IAEMA,EAAU,CAEd,CAAEC,MAAO,QAASC,WAAY,QAASL,MAAO,IAAKM,UAAU,GAG7D,CAAEF,MAAO,QACPC,WAAY,QACZE,KAAM,SACND,UAAU,GAGZ,CACEF,MAAO,cACPC,WAAY,eACZE,KAAM,OACNP,MAAO,IACPM,UAAU,GAIZ,CACEF,MAAO,YACPC,WAAY,aACZE,KAAM,WACNP,MAAO,IACPM,UAAU,IAIRJ,EAAO,CACX,CACEM,GAAI,EACJC,MAAO,MACPjC,MAAO,OACPkC,YAAaC,cACbC,UAAWC,eAEb,CACEL,GAAI,EACJC,MAAOK,cACPtC,MAAO,GACPkC,YAAaC,cACbC,UAAWC,eAEb,CACEL,GAAI,EACJC,MAAOK,cACPtC,MAAO,GACPkC,YAAaC,cACbC,UAAWC,eAEb,CACEL,GAAI,EACJC,MAAOK,cACPtC,MAAO,GACPkC,YAAaC,cACbC,UAAWC,eAEb,CACEL,GAAI,EACJC,MAAOK,cACPtC,MAAO,GACPkC,YAAaC,cACbC,UAAWC,gB,2BCrCEE,MAxDjB,WACI,OACI,mCACI,eAACC,EAAA,EAAD,WACI,eAAClB,EAAA,EAAD,CAAKmB,UAAU,OAAf,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACA,cAACL,EAAA,EAAKM,MAAN,2BACA,cAACN,EAAA,EAAKO,QAAN,CAAchB,KAAK,OAAOiB,YAAY,0BAGtC,eAACR,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,mBAA/B,UACA,cAACL,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKO,QAAN,CAAchB,KAAK,WAAWiB,YAAY,mBAI9C,eAACR,EAAA,EAAKE,MAAN,CAAYD,UAAU,OAAOI,UAAU,mBAAvC,UACI,cAACL,EAAA,EAAKM,MAAN,sBACA,cAACN,EAAA,EAAKO,QAAN,CAAcC,YAAY,oBAG9B,eAACR,EAAA,EAAKE,MAAN,CAAYD,UAAU,OAAOI,UAAU,mBAAvC,UACI,cAACL,EAAA,EAAKM,MAAN,wBACA,cAACN,EAAA,EAAKO,QAAN,CAAcC,YAAY,mCAG9B,eAAC1B,EAAA,EAAD,CAAKmB,UAAU,OAAf,UACI,eAACD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,eAA/B,UACA,cAACL,EAAA,EAAKM,MAAN,mBACA,cAACN,EAAA,EAAKO,QAAN,OAGA,eAACP,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,gBAA/B,UACA,cAACL,EAAA,EAAKM,MAAN,oBACA,eAACN,EAAA,EAAKS,OAAN,CAAaC,aAAa,YAA1B,UACI,+CACA,+CAIJ,eAACV,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKC,UAAU,cAA/B,UACA,cAACL,EAAA,EAAKM,MAAN,kBACA,cAACN,EAAA,EAAKO,QAAN,UAIJ,cAACP,EAAA,EAAKE,MAAN,CAAYD,UAAU,OAAOT,GAAG,mBAAhC,SACI,cAACQ,EAAA,EAAKW,MAAN,CAAYpB,KAAK,WAAWqB,MAAM,mBAGtC,cAACC,EAAA,EAAD,CAAQrC,QAAQ,UAAUe,KAAK,SAA/B,0BCnCDuB,MAbf,WACI,OACI,8BACI,eAACnC,EAAA,EAAD,CAAWsB,UAAU,GAArB,UACI,2DAEA,cAAC,EAAD,U,oDC0BCc,MA9BjB,WACI,OACI,mCACI,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAO3C,QAAQ,OAAvD,SACA,eAACG,EAAA,EAAD,WACI,cAACqC,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,6BACA,cAACL,EAAA,EAAOM,OAAR,CAAe,gBAAc,0BAC7B,eAACN,EAAA,EAAOO,SAAR,CAAiB/B,GAAG,wBAApB,UACI,eAACgC,EAAA,EAAD,CAAKvB,UAAU,UAAf,UACA,cAACuB,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASC,GAAG,IAAIC,KAAK,EAArB,oBACV,cAACH,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASC,GAAG,SAAZ,qBACV,cAACF,EAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASC,GAAG,SAAZ,qBACV,eAACE,EAAA,EAAD,CAAaC,MAAM,WAAWrC,GAAG,0BAAjC,UACI,cAACoC,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,oBACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,4BACA,cAACO,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,uBACA,cAACO,EAAA,EAAYG,QAAb,IACA,cAACH,EAAA,EAAYE,KAAb,CAAkBT,KAAK,cAAvB,kCAGJ,eAACG,EAAA,EAAD,WACA,cAACA,EAAA,EAAIC,KAAL,CAAUJ,KAAK,SAAf,wBACA,cAACG,EAAA,EAAIC,KAAL,CAAUO,SAAU,EAApB,SAAuB,cAAC,IAAD,CAASN,GAAG,SAAZ,mCCrB1BO,MAPjB,WACI,OACI,8BACI,0DCIKC,MAPjB,WACI,OACI,8BACI,+DC4BGC,MAdf,WACE,OACE,iCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,aCfzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OAEP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0def3797.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/database'; // If using Firebase database\nimport 'firebase/storage';\n\n/**\n * To install firebase\n * npm install firebase@^8.3.1\n */\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAxHlzpG_k2BHGcHcJSaL0geGS_ntdLV5Q\",\n    authDomain: \"jobsearch-f2329.firebaseapp.com\",\n    databaseURL: \"https://jobsearch-f2329-default-rtdb.firebaseio.com\",\n    projectId: \"jobsearch-f2329\",\n    storageBucket: \"jobsearch-f2329.appspot.com\",\n    messagingSenderId: \"830677515794\",\n    appId: \"1:830677515794:web:6890f934d8c7940747e2cb\",\n    measurementId: \"G-F688CRS2PB\"\n\n    // apiKey: process.env.REACT_APP_WEATHER_API_KEY,\n    // authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    // databaseURL: process.env.REACT_APP_DATABASE_URL,\n    // projectId: process.env.REACT_APP_PROJECT_ID,\n    // storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    // messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    // appId: process.env.REACT_APP_APP_ID,\n    // measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar database = firebase.firestore();\nexport default database;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport CompanyInfo from '../components/companyPage'\nimport Application from './jobApp';\n\nfunction Tabs() {\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: 'auto', typography: 'body1'}}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab label=\"Add New Company\" value=\"1\" />\n            <Tab label=\"Application Sent\" value=\"2\" />\n            <Tab label=\"Analytics\" value=\"3\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"1\">\n            <CompanyInfo/>\n        </TabPanel>\n        <TabPanel value=\"2\">\n            <Application/>\n        </TabPanel>\n        <TabPanel value=\"3\">Item Three</TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\nexport default Tabs\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)'}}\n  >\n    â€¢\n  </Box>\n);\n\nexport default function BasicCard(props) {\n    let value = props.value;\n    let price = props.price;\n    console.log(value, \"THIS IS Value\")\n  return (\n    <Card sx={{ minWidth: 275, maxWidth: 275, boxShadow: '2px 3px 4px 4px #ccc', marginRight: 4, marginLeft: 2, marginBottom: 2 }}>\n      <CardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {value}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          {price}\n        </Typography>\n      </CardContent>\n      {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n    </Card>\n  );\n}\n","import React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport {\n  randomCreatedDate,\n  randomTraderName,\n  randomUpdatedDate,\n} from '@mui/x-data-grid-generator';\nimport { Container, Row } from 'react-bootstrap';\nimport BasicCard from './card';\n\nexport default function BasicRowEditingGrid() {\n  return (\n    <>\n    <Container style={{paddingTop:'25px'}}>\n      <Row>\n        <BasicCard value=\"MARKET VALUE\" price=\"123.23\"/>\n        <BasicCard value=\"POSITION VALUE\" price=\"123.23\"/>\n        <BasicCard value=\"CASH VALUE\" price=\"123.23\"/>\n        \n      </Row>\n      \n    </Container>\n    {/* Remove if I want box to go full width */}\n      <Container>\n          <div style={{ height: 300, width: '100%', paddingTop:'25px'}}>\n            <DataGrid editMode=\"row\" rows={rows} columns={columns} />\n        </div>\n      </Container>\n    </>\n  );\n}\n\nconst words = \"Test\"\n\nconst columns = [\n    // Name\n  { field: 'stock', headerName: 'Stock', width: 180, editable: true },\n\n    // Age\n  { field: 'price', \n    headerName: 'Price',\n    type: 'number',\n    editable: true},\n\n    // Date Created\n  {\n    field: 'dateCreated',\n    headerName: 'Date Created',\n    type: 'date',\n    width: 180,\n    editable: true,\n  },\n\n  // Last Login\n  {\n    field: 'lastLogin',\n    headerName: 'Last Login',\n    type: 'dateTime',\n    width: 220,\n    editable: true,\n  },\n];\n\nconst rows = [\n  {\n    id: 1,\n    stock: \"VOO\",\n    price: 250.25,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 2,\n    stock: randomTraderName(),\n    price: 36,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 3,\n    stock: randomTraderName(),\n    price: 19,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 4,\n    stock: randomTraderName(),\n    price: 28,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n  {\n    id: 5,\n    stock: randomTraderName(),\n    price: 23,\n    dateCreated: randomCreatedDate(),\n    lastLogin: randomUpdatedDate(),\n  },\n];\n","import React from \"react\";\nimport { Form, Row, Button, Col } from \"react-bootstrap\";\n// https://react-bootstrap.netlify.app/components/forms/?#forms\n\nfunction AppForm() {\n    return (\n        <>\n            <Form>\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Company Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter company name\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                </Row>\n\n                <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control placeholder=\"1234 Main St\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n                    <Form.Label>Address 2</Form.Label>\n                    <Form.Control placeholder=\"Apartment, studio, or floor\" />\n                </Form.Group>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Select defaultValue=\"Choose...\">\n                        <option>Choose...</option>\n                        <option>...</option>\n                    </Form.Select>\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Zip</Form.Label>\n                    <Form.Control />\n                    </Form.Group>\n                </Row>\n\n                <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </>\n    );\n} export default AppForm;","import React from \"react\";\nimport Container from 'react-bootstrap/Container'\nimport \"../styles/contentPage.css\"\nimport ContentTable from \"../components/table\";\nimport AppForm from \"../components/form\";\n\nfunction HomePage() {\n    return(\n        <div>\n            <Container className=\"\">\n                <p>Homepage content goes here</p>\n                {/* <ContentTable/> */}\n                <AppForm/>\n            </Container>\n            \n        </div>\n    )\n\n}\nexport default HomePage;","import React from \"react\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Nav } from \"react-bootstrap\";\nimport { NavDropdown } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\n// https://react-bootstrap.github.io/getting-started/introduction/\n\nfunction Navigation() {\n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                    <Nav.Link><NavLink to=\"/\" end={true}>Home</NavLink></Nav.Link>\n                    <Nav.Link><NavLink to=\"/error\">Error</NavLink></Nav.Link>\n                    <Nav.Link><NavLink to=\"/table\">Table</NavLink></Nav.Link>\n                    <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                    </NavDropdown>\n                    </Nav>\n                    <Nav>\n                    <Nav.Link href=\"#deets\">More deets</Nav.Link>\n                    <Nav.Link eventKey={2}><NavLink to=\"/login\">Login</NavLink></Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n            </Navbar>\n        </>\n    )\n\n} export default Navigation;","import React from \"react\";\n\nfunction Error() {\n    return (\n        <div>\n            <h1>Oops! Page Not Found.</h1>\n        </div>\n    );\n\n} export default Error;","import React from \"react\";\n\nfunction LoginPage() {\n    return (\n        <div>\n            <h1>Welcome to the login page.</h1>\n        </div>\n    );\n\n} export default LoginPage;\n","import './App.css';\nimport Tabs from './components/tabs';\nimport HomePage from './pages/homepage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/contentPage.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\n\nimport Navigation from './components/Navbar';\nimport Error from './pages/Error';\nimport LoginPage from './pages/login';\nimport ContentTable from './components/table';\n\n// Information on how to deploy app:\n// add it to git repo\n// npm run deploy -- adds it to webpage\n// https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f\n// https://www.youtube.com/watch?v=4NpGzBEySvI\n\n\nfunction App() {\n  return (\n    <main>\n      <Navigation/>\n      <Routes>\n          <Route path=\"/\" element={<HomePage/>}/>\n          <Route path=\"/error\" element={<Error/>} />\n          <Route path=\"/table\" element={<ContentTable/>}/>\n          <Route path=\"/login\" element={<LoginPage/>} />\n      </Routes>\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\n\nReactDOM.render(\n  \n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}