{"version":3,"sources":["firebase.js","components/companyPage.jsx","components/tabs.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","CompanyInfo","useState","companyName","setcompanyName","companyLink","setCompanyLink","positionType","setPositionType","careerPageLink","setCareerPageLink","date","setDate","notes","setNotes","className","onSubmit","e","preventDefault","collection","add","then","console","log","alert","catch","error","message","placeholder","value","onChange","target","type","Tabs","React","setValue","Box","sx","width","typography","TabContext","borderBottom","borderColor","TabList","event","newValue","Tab","label","TabPanel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dabf4ff.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/database'; // If using Firebase database\nimport 'firebase/storage';\n\n/**\n * To install firebase\n * npm install firebase@^8.3.1\n */\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAxHlzpG_k2BHGcHcJSaL0geGS_ntdLV5Q\",\n    authDomain: \"jobsearch-f2329.firebaseapp.com\",\n    databaseURL: \"https://jobsearch-f2329-default-rtdb.firebaseio.com\",\n    projectId: \"jobsearch-f2329\",\n    storageBucket: \"jobsearch-f2329.appspot.com\",\n    messagingSenderId: \"830677515794\",\n    appId: \"1:830677515794:web:6890f934d8c7940747e2cb\",\n    measurementId: \"G-F688CRS2PB\"\n\n    // apiKey: process.env.REACT_APP_WEATHER_API_KEY,\n    // authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    // databaseURL: process.env.REACT_APP_DATABASE_URL,\n    // projectId: process.env.REACT_APP_PROJECT_ID,\n    // storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    // messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    // appId: process.env.REACT_APP_APP_ID,\n    // measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\nvar database = firebase.firestore();\nexport default database;","import React, {useState} from \"react\";\nimport database from \"../firebase\"\nimport \"../styles/companyPage.css\"\n\nconst CompanyInfo = () => {\n    const [companyName, setcompanyName] = useState(\"\"); // Company Name\n    const [companyLink, setCompanyLink] = useState(\"\"); // Company Link\n    const [positionType, setPositionType] = useState(\"\"); // Category\n    // const [jobTitle, setJobTitle] = useState(\"\"); // Job Posting\n    const [careerPageLink, setCareerPageLink] = useState(\"\"); // careerPage Link\n    // const [alumni, setAlumni] = useState(\"N\"); // Alumni\n    // const [location, setLocation] = useState(\"\"); // Location\n    const [date, setDate] = useState(\"\"); // Date of last visit\n    // const [linkedin, setLinkedin] = useState(\"\"); // Linkedin Link\n    const [notes, setNotes] = useState(\"\"); // notes\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        database.collection(\"value\").add({\n            companyName:companyName, \n            companyLink: companyLink,\n            positionType:positionType,\n            // jobTitle:jobTitle,\n            careerPageLink: careerPageLink,\n            // alumni:alumni,\n            // location: location,\n            date: date,\n            // linkedin: linkedin,\n            notes:notes\n            \n        })\n        .then(() =>{\n            console.log(\"THIS RAN1\")\n            // This is where I should put my snackbar\n            alert(\"Sucess! Form processed.\")\n        })\n        .catch(error => {\n            console.log(\"THIS RAN2\")\n            alert(\"Failed: Form not successfully processes.\")\n            alert(error.message);\n        });\n\n        setcompanyName('');\n        setCompanyLink('');\n        setPositionType(\"\");\n        // setJobTitle('');\n        setCareerPageLink('');\n        // setAlumni(\"N\");\n        // setLocation('');\n        setDate('');\n        setNotes('');\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <h1>Add A New Company To The Database</h1>\n\n            <label>Company Name</label>\n            <input placeholder=\"company name\" value={companyName} onChange={(e) => setcompanyName(e.target.value)}></input>\n            {/* Need to check if company exists or not -- Firebase rule validation */}\n\n            <label>Company Link</label>\n            <input placeholder=\"https://companyLink.com\" value={companyLink} onChange={(e) => setCompanyLink(e.target.value)}></input>\n            \n\n            <label>Category</label>\n            <select placeholder=\"select one\" value={positionType} onChange={(e) => setPositionType(e.target.value)}>\n                <option>Internship</option>\n                <option>Full-time</option>\n                <option>Post-align</option>\n            </select>\n\n\n            {/* <label>Job Posting</label>\n            <input placeholder=\"name\" value={jobTitle} onChange={(e) => setJobTitle(e.target.value)}></input> */}\n\n            <label>Career Page Link</label>\n            <input placeholder=\"https://companyLink/careers\" value={careerPageLink} onChange={(e) => setCareerPageLink(e.target.value)}></input>\n\n            {/* <label>Alumni</label>\n            <input placeholder=\"\" value={alumni} onChange={(e) => setAlumni(e.target.value)}></input> */}\n\n            {/* <label>Location</label>\n            <input placeholder=\"City, State\" value={location} onChange={(e) => setLocation(e.target.value)}></input> */}\n\n            <label>Date of Visit</label>\n            <input placeholder=\"mm/dd/yyyy\" type=\"date\" value={date} onChange={(e) => setDate(e.target.value)}></input>\n\n            {/* <label>Linkedin Link</label>\n            <input placeholder=\"https://Linkedin.com\" value={linkedin} onChange={(e) => setLinkedin(e.target.value)}></input> */}\n\n            <label>Notes</label>\n            <textarea placeholder=\"message\" value={notes} onChange={(e) => setNotes(e.target.value)}></textarea>\n\n            <button type>Submit</button>\n        </form> \n    );\n}\n\nexport default CompanyInfo;","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Tab from '@mui/material/Tab';\nimport TabContext from '@mui/lab/TabContext';\nimport TabList from '@mui/lab/TabList';\nimport TabPanel from '@mui/lab/TabPanel';\nimport CompanyInfo from '../components/companyPage'\n\nfunction Tabs() {\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%', typography: 'body1' }}>\n      <TabContext value={value}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\n            <Tab label=\"Item One\" value=\"1\" />\n            <Tab label=\"Item Two\" value=\"2\" />\n            <Tab label=\"Item Three\" value=\"3\" />\n          </TabList>\n        </Box>\n        <TabPanel value=\"1\">\n            <CompanyInfo/>\n        </TabPanel>\n        <TabPanel value=\"2\">Item Two</TabPanel>\n        <TabPanel value=\"3\">Item Three</TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\nexport default Tabs\n","import './App.css';\nimport Tabs from './components/tabs';\n\n// Information on how to deploy app:\n// add it to git repo\n// npm run deploy -- adds it to webpage\n// https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tabs/>\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}